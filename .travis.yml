group: travis_latest
os: linux
dist: focal
language: python
cache: pip
python:
  #- 2.7
  #- 3.5
  #- 3.6
  #- 3.7
  - 3.8
jobs:
  allow_failures:
    - python: 2.7
    - python: nightly
    - python: pypy
    - python: pypy3
env:
  - REPO=tensorflow/adanet            # 2020-04-22
  - REPO=tensorflow/addons            # 2020-05-07
  - REPO=tensorflow/agents            # 2020-05-06
  - REPO=tensorflow/autograph         # 2020-05-05
  - REPO=tensorflow/benchmarks        # 2020-04-21
  - REPO=tensorflow/build             # 2020-02-27
  - REPO=tensorflow/cleverhans        # 2020-05-07
  - REPO=tensorflow/cloud             # 2020-05-02
  - REPO=tensorflow/compression       # 2020-04-16
  - REPO=tensorflow/custom-op         # 2020-04-20
  - REPO=tensorflow/data-validation   # 2020-05-07
  - REPO=tensorflow/datasets          # 2020-05-07
  - REPO=tensorflow/deepmath          # 2020-03-16
  - REPO=tensorflow/docs              # 2020-05-06
  - REPO=tensorflow/docs-l10n         # 2020-05-07
  - REPO=tensorflow/ecosystem         # 2020-05-05
  - REPO=tensorflow/estimator         # 2020-05-06
  - REPO=tensorflow/examples          # 2020-05-07
  - REPO=tensorflow/fairness-indicators  # 2020-05-07
  - REPO=tensorflow/federated         # 2020-05-06
  - REPO=tensorflow/fold              # 2017-10-31
  - REPO=tensorflow/gan               # 2020-04-28
  - REPO=tensorflow/graphics          # 2020-05-07
  - REPO=tensorflow/hub               # 2020-05-06
  - REPO=tensorflow/io                # 2020-05-07
  - REPO=tensorflow/java              # 2020-05-01
  - REPO=tensorflow/java-models       # 2020-04-07
  - REPO=tensorflow/kfac              # 2020-01-20
  - REPO=tensorflow/lattice           # 2020-04-28
  - REPO=tensorflow/lingvo            # 2020-05-07
  - REPO=tensorflow/lucid             # 2020-04-29
  - REPO=tensorflow/magenta           # 2020-05-06
  - REPO=tensorflow/mesh              # 2020-05-06
  - REPO=tensorflow/metadata          # 2020-04-30
  - REPO=tensorflow/minigo            # 2020-04-23
  - REPO=tensorflow/model-analysis    # 2020-05-07
  - REPO=tensorflow/model-optimization  # 2020-05-07
  - REPO=tensorflow/models            # 2020-05-07
  - REPO=tensorflow/moonlight         # 2020-04-27
  - REPO=tensorflow/networking        # 2020-04-24
  - REPO=tensorflow/neural-structured-learning  # 2020-04-30
  - REPO=tensorflow/ngraph-bridge     # 2020-05-07
  - REPO=tensorflow/nmt               # 2019-02-13
  - REPO=tensorflow/privacy           # 2020-05-01
  - REPO=tensorflow/probability       # 2020-05-07
  - REPO=tensorflow/profiler          # 2020-04-29
  - REPO=tensorflow/profiler-ui       # 2019-09-10
  - REPO=tensorflow/quantum           # 2020-05-06
  - REPO=tensorflow/ranking           # 2020-04-01
  - REPO=tensorflow/runtime           # 2020-05-07
  - REPO=tensorflow/rust              # 2020-04-26
  - REPO=tensorflow/serving           # 2020-05-07
  - REPO=tensorflow/skflow            # 2020-04-12
  - REPO=tensorflow/swift-apis        # 2020-05-07
  - REPO=tensorflow/swift-bindings    # 2019-06-10
  - REPO=tensorflow/swift-models      # 2020-05-07
  - REPO=tensorflow/tcav              # 2020-04-20
  - REPO=tensorflow/tensor2tensor     # 2020-05-05
  - REPO=tensorflow/tensorboard       # 2020-05-06
  - REPO=tensorflow/tensorflow        # 2020-05-07
  - REPO=tensorflow/tensorrt          # 2020-03-18
  - REPO=tensorflow/tensorstore       # 2019-04-15
  - REPO=tensorflow/text              # 2020-04-29
  - REPO=tensorflow/tfjs              # 2020-05-07
  - REPO=tensorflow/tfjs-examples     # 2020-04-16
  - REPO=tensorflow/tfjs-models       # 2020-05-06
  - REPO=tensorflow/tfx               # 2020-05-07
  - REPO=tensorflow/tfx-bsl           # 2020-05-04
  - REPO=tensorflow/tpu               # 2020-05-06
  - REPO=tensorflow/transform         # 2020-05-06
  - REPO=tensorflow/workshops         # 2020-04-10

install:
  #- pip install -r requirements.txt
  - pip install codespell flake8  # pytest  # add other testing frameworks later
before_script:
  - URL=https://github.com/${REPO}
  - echo ; echo -n "flake8 testing of ${URL} on " ; python -V
  - git clone --depth=50 ${URL} ~/${REPO}  # --branch=master
  - cd ~/${REPO}
script:
  - echo stop the build if there are Python syntax errors or undefined names
  - echo ; echo -n "flake8 testing of ${URL} on " ; python -V
  - time flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
  - echo exit-zero treats all errors as warnings.  The GitHub editor is 127 chars wide
  - flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  - codespell . --ignore-words-list=ba,referer --skip=./.* --quiet-level=2 || true
  #- true  # pytest --capture=sys
notifications:
  on_success: change
  on_failure: change  # `always` will be the setting once code changes slow down
