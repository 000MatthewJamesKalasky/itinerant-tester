language: python
env:
    - REPO=IBMPredictiveAnalytics/NN_with_Keras
    - REPO=IBMPredictiveAnalytics/Python_URLDownloader
    - REPO=IBMPredictiveAnalytics/TreeMaps_with_Pygal
    - REPO=IBMPredictiveAnalytics/Simple_Linear_Programming_with_CPLEX
    - REPO=IBMPredictiveAnalytics/Spark_ML_Feature_TF-IDF
    - REPO=IBMPredictiveAnalytics/PCA_with_MLlib
    - REPO=IBMPredictiveAnalytics/K_Means_with_MLlib
    - REPO=IBMPredictiveAnalytics/MapPlots_with_Folium
    - REPO=IBMPredictiveAnalytics/RadarCharts_with_Pygal
    - REPO=IBMPredictiveAnalytics/Python_Extension
    - REPO=IBMPredictiveAnalytics/TwitterBlueMix
    - REPO=IBMPredictiveAnalytics/INTERNAL_TOOLS
    - REPO=IBMPredictiveAnalytics/InteractPlot_with_Seaborn
    - REPO=IBMPredictiveAnalytics/SVM_with_scikit-learn
    - REPO=IBMPredictiveAnalytics/SPSSINC_MODIFY_TABLES
    - REPO=IBMPredictiveAnalytics/STATS_CORRELATIONS
    - REPO=IBMPredictiveAnalytics/ViolinPlots_with_Seaborn
    - REPO=IBMPredictiveAnalytics/JointPlots_with_Seaborn
    - REPO=IBMPredictiveAnalytics/ChordCharts_with_Bokeh
    - REPO=IBMPredictiveAnalytics/DonutCharts_with_Bokeh
    - REPO=IBMPredictiveAnalytics/Normalization_with_PySpark
    - REPO=IBMPredictiveAnalytics/DecisionTrees_with_MLlib
    - REPO=IBMPredictiveAnalytics/BinaryLogReg_with_MLlib
    - REPO=IBMPredictiveAnalytics/SPSSINC_CENSOR_TABLES
    - REPO=IBMPredictiveAnalytics/SPSSINC_TURF
    - REPO=IBMPredictiveAnalytics/Multinomial_Naive_Bayes_with_MLlib
    - REPO=IBMPredictiveAnalytics/Gradient_Boosted_Trees_with_MLlib
    - REPO=IBMPredictiveAnalytics/STATS_SUBGROUP_PLOTS
    - REPO=IBMPredictiveAnalytics/STATS_VALLBLS_FROMDATA
python:
    - 2.7.13
    - 3.6
cache: pip
install:
    - pip install coveralls hacking pylint # pytest  # add other testing frameworks later
before_script:
    - URL=https://github.com/${REPO}
    - echo ; echo -n "flake8 testing of ${URL} on " ; python -V
    - git clone --depth=50 ${URL} ~/${REPO}  # --branch=master
    - cd ~/${REPO}
script:
    - echo stop the build if there are Python syntax errors or undefined names
    - echo ; echo -n "flake8 testing of ${URL} on " ; python -V
    - time flake8 . --count --select=E901,E999,F821,F822,F823 --show-source --statistics
    - echo exit-zero treats all errors as warnings.  The GitHub editor is 127 chars wide
    - time flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
after_success:
    - cd ~/${REPO}  # so pylint does not halt on invalid module name
    - touch __init__.py  # so that pylint does not claim to be lost
    - pylint .
    # - coveralls
notifications:
    on_success: change
on_failure: change  # `always` will be the setting once code changes slow down

